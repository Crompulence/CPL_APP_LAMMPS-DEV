diff --git a/src/lammps.h b/src/lammps.h
index c432784a0..abfc8f488 100644
--- a/src/lammps.h
+++ b/src/lammps.h
@@ -16,6 +16,9 @@
 
 #include <stdio.h>
 
+// Global variable, makes life easier here
+extern class CPLSocketLAMMPS cplsocket;
+
 namespace LAMMPS_NS {
 
 class LAMMPS {
diff --git a/src/main.cpp b/src/main.cpp
index 7401183fe..ced922350 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -17,6 +17,7 @@
 #include "error.h"
 #include <stdio.h>
 #include <stdlib.h>
+#include "CPLSocketLAMMPS.h"
 
 #if defined(LAMMPS_TRAP_FPE) && defined(_GNU_SOURCE)
 #include <fenv.h>
@@ -27,6 +28,7 @@ using namespace LAMMPS_NS;
 /* ----------------------------------------------------------------------
    main program to drive LAMMPS
 ------------------------------------------------------------------------- */
+CPLSocketLAMMPS cplsocket;
 
 int main(int argc, char **argv)
 {
@@ -47,6 +49,10 @@ int main(int argc, char **argv)
 #ifdef LAMMPS_EXCEPTIONS
   try {
     LAMMPS *lammps = new LAMMPS(argc,argv,MPI_COMM_WORLD);
+    delete lammps;
+  	cplsocket.initComms();
+  	MPI_Comm comm = cplsocket.realmCommunicator();
+    lammps = new LAMMPS(argc,argv,comm);
     lammps->input->file();
     delete lammps;
   } catch(LAMMPSAbortException & ae) {
@@ -57,9 +63,13 @@ int main(int argc, char **argv)
   }
 #else
   LAMMPS *lammps = new LAMMPS(argc,argv,MPI_COMM_WORLD);
+  delete lammps;
+  cplsocket.initComms();
+  MPI_Comm comm = cplsocket.realmCommunicator();
+  lammps = new LAMMPS(argc,argv,comm);
   lammps->input->file();
   delete lammps;
 #endif
-  MPI_Barrier(MPI_COMM_WORLD);
+  MPI_Barrier(comm);
   MPI_Finalize();
 }
