# LAMMPS

variable	xx equal 300
variable	yy equal 300
variable	zz equal 300

processors $[npx] $[npy] $[npz]


units		real
atom_style	atomic

lattice		fcc 10
region		box block 0.0 ${xx} 0.0 ${yy} 0.0 ${zz} units box
boundary p p p
create_box	1 box

variable dx equal ${xx}/$[ncx]
variable dy equal ${yy}/$[ncy]
variable dz equal ${zz}/$[ncz]
variable timestep_ratio equal 5
variable samples equal 5
variable bin_dimension equal $[bin_dimension]

variable olap_bot equal ${yy}-($[olap_yhi]-$[olap_ylo]+1)*${dy}
variable bc_lo equal ${olap_bot}+(${dy}*($[bndry_ylo]-1))
variable bc_hi equal ${bc_lo}+(${dy}*($[bndry_yhi]-$[bndry_ylo]+1))

region fluidregion block 0 ${xx} 0 ${yy} 0 ${zz} units box
region constrainreg block EDGE EDGE ${bc_lo} ${bc_hi} EDGE EDGE units box

create_atoms 1 region fluidregion units box

mass		1 1.0

velocity	all create 1000.0 87287 loop geom

pair_style	lj/cut 10
pair_coeff	1 1 2.5 3.4

neighbor	2.0 bin
neigh_modify delay 0 every 1 check yes

thermo 10

fix		1 all nve

# This has to be set before equilibration in a real coupled simulation
fix cplfix all cpl/init
fix cplfixconstrain all cpl/constrain

# Equilibrate before coupling (timestep not multiple of timestep-ratio should work)
run $(2*v_timestep_ratio+1)

# IMPORTANT for not messing the internal average for BCs in the CPLSocket for LAMMPS
reset_timestep 0

if "${bin_dimension} == 1" then &
    "compute vfieldcompute all chunk/atom bin/3d x lower 300 y  lower ${dy} z  lower 300 bound y ${bc_lo} ${bc_hi}  bound x 0 300  bound z 0 300 ids every region constrainreg units box" &
elif "${bin_dimension} == 3" &
    "compute vfieldcompute all chunk/atom bin/3d x lower ${dx} y  lower ${dy} z  lower ${dz} bound y ${bc_lo} ${bc_hi}  bound x 0 300  bound z 0 300 ids every region constrainreg units box"


compute tpartial all temp/partial 1 1 0
compute temp all temp/chunk vfieldcompute temp  bias tpartial 

# The output shows the middle coordinate of each box (10, 10, 10) for the first box in this case
# fix vfieldfix all ave/chunk  1 ${timestep_ratio} ${timestep_ratio} vfieldcompute vx vy vz norm all file lammps_vels.dat
compute vcom_comp all vcm/chunk vfieldcompute
compute property_comp all property/chunk vfieldcompute coord1 coord2 coord3 count
fix vfieldfix all ave/time 1 ${samples} ${timestep_ratio} c_property_comp[*] c_vcom_comp[*][1] c_temp[*] mode vector file lammps_bc.dat


# cplifx set variable CPLSTEPS to the total number of steps
print "---RUN COUPLED---"

fix cplbcfix all cpl/bc
run ${CPLSTEPS}
